---
import { Icon } from "astro-icon";
import { getUserData } from "../../scripts/userData";

const token = Astro.cookies.get("token");
const userData = token ? await getUserData(token.value) : null;
---

<nav>
  <a href="/"><Icon name="mdi:home" /> Home</a>
  <a href="/punishments"><Icon name="mdi:hammer" /> Punishments</a>
  <a href="/alerts"
    ><Icon name="mdi:bell" />Alerts<span id="unread"
      >{userData?.alerts.length}</span
    ></a
  >
  <a href="/profile"
    >{
      userData?.avatar ? (
        <img
          src={`https://media.discordapp.net/avatars/${userData.userId}/${userData.avatar}.png`}
          alt={userData.userTag}
        />
      ) : (
        <Icon name="mdi:account" />
      )
    } Profile</a
  >
</nav>

<style lang="scss">
  nav {
    padding: 1rem;
    display: grid;
    grid-auto-rows: min-content;
    align-items: center;
    overflow: auto;
    gap: 1rem;
    width: fit-content;
    border-right: var(--border);

    @media (max-width: 768px) {
      border-right: none;
      border-top: var(--border);
      order: 1;
      grid-auto-flow: column;
      width: 100%;
    }
  }

  a {
    position: relative;
    display: grid;
    padding: 0.5rem 0.25rem;
    text-align: center;
    border-radius: var(--border-radius);
    transition: var(--transition);

    &:hover {
      background-color: var(--primary);
      color: var(--on-primary);
    }
  }

  span {
    position: absolute;
    right: 2rem;
    top: 0.5rem;
  }

  [astro-icon] {
    height: 1.5rem;
  }
</style>

<script>
  const currentLocation = document.querySelector(
    `a[href="${location.pathname}"]`,
  ) as HTMLAnchorElement;

  if (currentLocation) {
    currentLocation.style.backgroundColor = "var(--primary)";
    currentLocation.style.color = "var(--on-primary)";
  }
</script>

<script>
  if (location.pathname === "/alerts") {
    document.getElementById("unread")?.remove();
  }
</script>
