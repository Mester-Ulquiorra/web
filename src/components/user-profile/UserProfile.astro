---
import { getAPIRoute } from "../../scripts/functions";
import ServerLink from "./ServerLink.astro";
interface Props {
  userId: string;
  avatar: string;
  userTag: string;
}

const { userId, avatar, userTag } = Astro.props;

const logoutRoute = getAPIRoute("logout");
---

<div>
  <div class="info">
    {
      avatar && (
        <img
          src={`https://media.discordapp.net/avatars/${userId}/${avatar}.png`}
          alt="User avatar"
        />
      )
    }

    <p>{userTag}</p>
  </div>
  <menu>
    <ServerLink />
    <form action={logoutRoute}>
      <button type="submit">Log out</button>
    </form>
  </menu>
</div>

<style>
  div {
    display: inline-flex;
    gap: 0.5rem;
    position: relative;
    cursor: pointer;
    z-index: 4;

    &:hover {
      & .info {
        border-color: var(--text);
      }

      & menu {
        visibility: visible;
        opacity: 1;
        top: 1.5rem;
      }
    }
  }

  .info {
    padding: 0.5rem;
    border-radius: calc(var(--border-radius) * 1.5)
      calc(var(--border-radius) * 1.5) 0 0;
    border: var(--border);
    border-color: transparent;
    border-bottom: none;
    transition: var(--transition);
  }

  img {
    height: 1.75rem;
    border-radius: 100vmax;
  }

  p {
    font-size: 1.25rem;
    font-weight: bold;
  }

  img,
  p {
    place-self: center;
  }

  button {
    background-color: transparent;
    padding: 0.5rem;
  }

  menu {
    display: grid;
    visibility: hidden;
    opacity: 0;
    gap: 0.5rem;
    font-weight: bold;
    position: absolute;
    left: 0;
    right: 0;
    width: 100%;
    padding: 0.5rem;
    margin: 0.75rem 0;
    transition: var(--transition);
    background-color: var(--bg);
    border-radius: 0 0 calc(var(--border-radius) * 1.5)
      calc(var(--border-radius) * 1.5);
    border: var(--border);
    border-top: none;
    top: 0.5rem;
  }

  form {
    width: 100%;
    background-color: transparent;
    border-radius: var(--border-radius);
    transition: var(--transition);

    &:hover {
      background-color: var(--primary);
      color: var(--on-primary);
    }
  }
</style>
