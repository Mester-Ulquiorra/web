---
import BaseLayout from "../layouts/BaseLayout.astro";
import { getAPIRoute } from "../scripts/functions";

const token = Astro.cookies.get("token").value ?? "";
const apiRoute = getAPIRoute("createAppeal");
---

<BaseLayout title="Appeal">
  <main>
    <form id="appeal">
      <label for="punishmentId">Punishment ID</label>
      <input name="punishmentId" type="text" id="punishmentId" />
      <label for="reason">Reason</label>
      <textarea
        name="reason"
        id="reason"
        placeholder="Why do you think your appeal should be appealed? (128-1024 chars)"
        rows="4"
        minlength="128"
        maxlength="1024"></textarea>
      <label for="additional">Additional information</label>
      <textarea
        name="additional"
        id="additional"
        placeholder="Is there anything else you'd like to let us know? (max 1024 chars)"
        rows="4"
        maxlength="1024"></textarea>
      <button type="submit">Submit</button>
    </form>
  </main>
</BaseLayout>

<style>
  form {
    display: grid;
    grid-gap: 1rem;
  }

  input,
  textarea {
    all: unset;
    border: var(--border);
    padding: 0.5rem;
    border-radius: var(--border-radius);
    hyphens: auto;

    &::placeholder {
      color: var(--secondary);
      opacity: 50%;
    }
  }

  label {
    font-weight: bold;

    &::after {
      content: ":";
    }
  }

  button {
    width: min-content;
    border: var(--border);
    padding: 0.5rem;
    border-radius: var(--border-radius);
    transition: var(--transition);

    &:hover {
      background-color: var(--primary);
      color: var(--on-primary);
    }
  }
</style>

<script>
  const id = sessionStorage.getItem("id") ?? "";
  const punishmentIdInput = document.getElementById(
    "punishmentId"
  ) as HTMLInputElement;
  punishmentIdInput.value = id;

  sessionStorage.clear();
</script>

<script define:vars={{ token, apiRoute }}>
const form = document.getElementById("appeal");
form.addEventListener("submit", (event) => {
  event.preventDefault();
  const formData = new FormData(form);
  const data = Object.fromEntries(formData.entries());

  // send post request
  fetch(apiRoute, {
    method: "POST",
    headers: {
      "Content-Type": "application/json",
      Authorization: token,
    },
    body: JSON.stringify(data),
  })
    .then((response) => {
      if (!response.ok) {
        alert("todo: replace this with an error toast");
        throw new Error("Network response was not ok");
      }
      alert("todo: replace this with a success toast");
    })
    .catch((error) => {
      console.error("Error:", error);
    });
});
</script>
