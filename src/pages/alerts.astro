---
import BaseLayout from "../layouts/BaseLayout.astro";
import { getAPIRoute } from "../scripts/api";

const alertsRoute = getAPIRoute("ws");

import "../styles/alerts.scss";

const token = Astro.cookies.get("token").value ?? "";

if (!token) {
  return Astro.redirect("/login");
}
---

<BaseLayout title="Alerts">
  <main id="alerts" data-route={alertsRoute}></main>
</BaseLayout>

<style lang="scss">
  main {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(min(100%, 24rem), 1fr));
    grid-auto-rows: min-content;
    grid-gap: 1rem;
  }
</style>

<script>
  import type { Alert, AlertType } from "../scripts/alerts";
  import { createAlert } from "../scripts/alerts";

  const alertsMainElem = document.getElementById("alerts") as HTMLElement;
  const alertsRoute = alertsMainElem.dataset.route as string;

  const ws = new WebSocket(alertsRoute);

  const alertHistory = JSON.parse(
    localStorage.getItem("alertHistory") ?? "[]"
  ) as Alert<AlertType>[];

  if (alertHistory.length > 0) {
    for (const alert of alertHistory) {
      createAlert(alert, alertsMainElem);
    }
  }

  ws.onmessage = (msg: MessageEvent<string>) => {
    if (msg.data === "ping" || msg.data.startsWith("welcome")) return;

    const alert = JSON.parse(msg.data) as Alert<AlertType>;

    alertHistory.push(alert);
    localStorage.setItem("alertHistory", JSON.stringify(alertHistory));

    createAlert(alert, alertsMainElem);
  };
</script>
